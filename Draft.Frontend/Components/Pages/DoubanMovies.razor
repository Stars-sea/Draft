@page "/movies"
@using Draft.Frontend.Api
@using Draft.Models.Dto.Movie

@inject IDoubanMovieApi Api

<PageTitle>Douban Top Movies</PageTitle>

<MudGrid Justify="Justify.Center" Spacing="8">
    <MudItem xs="12">
        <MudText Typo="Typo.h4">Douban Top 250</MudText>
    </MudItem>
    <MudFlexBreak/>

    @foreach (DoubanMovieResponse movie in _movies) {
        <MudItem xs="3">
            <MudCard>
                <MudCardMedia Image=@($"/img/{movie.Id}")/>
                <MudCardContent>
                    <MudStack Row="true" AlignItems="AlignItems.Baseline"
                              Justify="Justify.SpaceBetween">
                        <MudText Typo="Typo.h5">@movie.Title</MudText>
                        <MudText Typo="Typo.h4" style="opacity: 40%">#@movie.Rank</MudText>
                    </MudStack>

                    <MudText Typo="Typo.caption">@movie.Year</MudText>
                    <MudText Typo="Typo.caption">@string.Join('/', movie.OtherTitles ?? [])</MudText>

                    <MudStack Row="true" AlignItems="AlignItems.Center">
                        <MudRating SelectedValue="@((int)movie.Rating! / 2)" MaxValue="5" ReadOnly="true"/>
                        <MudText>@movie.Rating</MudText>
                    </MudStack>

                    <MudText>@movie.Quote</MudText>
                </MudCardContent>
                <MudCardActions>
                    <MudButton Variant="Variant.Text" Color="Color.Primary" Href="@movie.Url" Target="_blank">
                        View on Douban
                    </MudButton>
                </MudCardActions>
            </MudCard>
        </MudItem>
    }
</MudGrid>

@code {
    private List<DoubanMovieResponse> _movies = [];

    protected override async Task OnInitializedAsync() {
        _movies = (await Api.GetDoubanMovies()).OrderBy(m => m.Rank).ToList();
    }

}